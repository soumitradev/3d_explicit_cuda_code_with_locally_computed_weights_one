#2D CODE CMAKE SCRIPT
cmake_minimum_required(VERSION 3.10)
project(2d-euler-code)

enable_language(Fortran)
enable_language(CUDA)
include_directories(${CUDA_INCLUDE_DIRS})
set(LIBS ${LIBS} ${CUDA_LIBRARIES})

message("Building CUDA 3d-euler-cuda-code")
add_compile_options(-march=native -O3)
file(GLOB 2D_SOURCES ${CMAKE_SOURCE_DIR}/*.f90)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_data_structure.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_q_variables.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_q_derivatives.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_timestep_delt.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_octant_fluxes.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_split_fluxes.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_qvariables_to_primitive_variables.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_limiters.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_wall_flux_dGxpos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_wall_flux_dGxneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_wall_flux_dGypos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_wall_flux_dGyneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_wall_flux_dGzneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/evaluate_wall_pts_flux_residuals.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_outer_flux_dGxpos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_outer_flux_dGxneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_outer_flux_dGypos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_outer_flux_dGyneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_outer_flux_dGzpos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/evaluate_outer_bdry_pts_flux_residuals.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGxpos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGxneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGypos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGyneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGzpos.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_interior_flux_dGzneg.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/evaluate_interior_pts_flux_residuals.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_primitive_to_conserved_vector.cuf )
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_conserved_to_primitive_vector.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_conserved_vector_Ubar.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_state_update.cuf)
list(APPEND 2D_CUDA_SOURCES ${CMAKE_SOURCE_DIR}/device_fpi_solver.cuf)
file(WRITE cuda.F90.in "")
foreach(2D_CUDA_FILE ${2D_CUDA_SOURCES})
  file(READ ${2D_CUDA_FILE} CONTENTS)
  file(APPEND cuda.F90.in "${CONTENTS}")
endforeach()
configure_file(cuda.F90.in cuda.F90 COPYONLY)
set(CUDA_SEPARABLE_COMPILATION ON)
set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -gpu=rdc -Mcuda=nordc,lineinfo  -Minfo=all -Minline=reshape -O3")
add_executable(execname ${2D_SOURCES} ${CMAKE_CURRENT_BINARY_DIR}/cuda.F90)
target_link_libraries(execname ${CUDA_cusparse_LIBRARY} ${LIBS})